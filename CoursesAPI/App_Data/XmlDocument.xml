<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoursesAPI</name>
    </assembly>
    <members>
        <member name="M:CoursesAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:CoursesAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,CoursesAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,CoursesAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:CoursesAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},CoursesAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:CoursesAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:CoursesAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:CoursesAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(CoursesAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CoursesAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,CoursesAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CoursesAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:CoursesAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:CoursesAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:CoursesAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:CoursesAPI.Controllers.CoursesController">
            <summary>
            CoursesController represents recourses belonging to courses.
            </summary>   
        </member>
        <member name="M:CoursesAPI.Controllers.CoursesController.#ctor">
            <summary>
            Parameterless constructor.
            </summary>
        </member>
        <member name="M:CoursesAPI.Controllers.CoursesController.GetCourseTeachers(System.String)">
            <summary>
            Returns a list of teachers in courses given a certain semester.
            </summary>
            <param name="semester"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.CoursesController.GetCoursesOnSemester(System.String)">
            <summary>
            Returns a list of courses taught on a certain semester
            </summary>
            <param name="semester"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.CoursesController.GetTeacherInCourse(System.String)">
            <summary>
            Returns a list of teachers that are teaching courses on a given semester.
            </summary>
            <param name="semester"></param>
            <returns></returns>
        </member>
        <member name="T:CoursesAPI.Controllers.GradeController">
            <summary>
            GradeController represents resources belonging to grades.
            </summary>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.#ctor">
            <summary>
            Constructor for the controller.
            </summary>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.PostProject(CoursesAPI.Models.ProjectCreateViewModel)">
            <summary>
            Adds new projects of different types
            to a given course instance.
            </summary>
            <param name="model"></param>
            <returns>Returns the project that was created.</returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.PostGrade(CoursesAPI.Models.GradeCreateViewModel)">
            <summary>
            Adds a new grade to projects of
            different types in a given
            course instance.
            </summary>
            <param name="model"></param>
            <returns>Returns the grade that was given.</returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.PostProjectGroup(CoursesAPI.Models.ProjectGroupCreateViewModel)">
            <summary>
            Adds a new project group of 
            different types in a given
            course instance.
            </summary>
            <param name="model"></param>
            <returns>Returns the group that was created.</returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.GetGrade(System.Int32,System.String)">
            <summary>
            Gets a student grade from
            specific project.
            </summary>
            <param name="projectID"></param>
            <param name="studentID"></param>
            <returns>Return grade for project.</returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.GetFinalGrade(System.Int32,System.String)">
            <summary>
            Gets the final grade of a given
            student or the current grade.
            </summary>
            <param name="studentID"></param>
            <returns>Returns the final grade in a course or current grade.</returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.GetProjectRankings(System.String,System.Int32)">
            <summary>
            Gets a students ranking in a
            single project.
            </summary>
            <param name="studentID"></param>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.GetFinalRankings(System.Int32,System.String)">
            <summary>
            Gets a students final grade ranking
            among others in a given course.
            </summary>
            <param name="studentID"></param>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.GetAllGradesByStudent(System.String)">
            <summary>
            Returns all grades for a single student
            </summary>
            <param name="studentID"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.ProjectOverView(System.Int32)">
            <summary>
            Returns a list of all students and there grade for the given project
            </summary>
            <param name="projectID"></param>
            <returns></returns>
        </member>
        <member name="M:CoursesAPI.Controllers.GradeController.FinalGradeOverView(System.Int32)">
            <summary>
            Returns a list with all student names and there grade in a current course
            </summary>
            <param name="courseInstanceID"></param>
            <returns></returns>
        </member>
        <member name="T:CoursesAPI.Filters.AppExceptionFilter">
            <summary>
            An attempt to write a generic exception filter, which would ensure..
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.DefaultUICulture">
            <summary>
              Sets the default culture (UICulture) which is used in the localization process
            </summary>
            <remarks>
              The default culture will not get translation missing tags etc.
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.DefaultUICulture.Reset">
            <summary>
            Reset to framework default culture (1033)
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.DefaultUICulture.Set(System.Globalization.CultureInfo)">
            <summary>
              Sets the specified culture.
            </summary>
            <param name="culture"> The culture. </param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.DefaultUICulture.Is(System.Globalization.CultureInfo)">
            <summary>
            Gets if the default culture is the specified one.
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.DefaultUICulture.FormatUnknown(System.String)">
            <summary>
            Format the name as the default format for unknown translations:
            ex: [en-US:ProperyName]
            </summary>
            <param name="name">String to format</param>
            <returns>Formatted name</returns>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.DefaultUICulture.Value">
            <summary>
              Gets current default culture
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.DefaultUICulture.IsEnglish">
            <summary>
            Gets if english is used as default language.
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.DefaultUICulture.IsActive">
            <summary>
            Gets if <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"/>  is the default culture
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.DefaultUICulture.LCID">
            <summary>
            Gets locale id
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.IClientValidationRule">
            <summary>
            Interface for clint validation rules
            </summary>
            <remarks>Created so that we can decorate existing validation classes instead of having to create a lot of adapters.</remarks>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.IClientValidationRule.ErrorMessage">
            <summary>
            Gets complete error message (formatted)
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.IClientValidationRule.ValidationParameters">
            <summary>
            Gets or sets parameters required for the client validation rule
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.IClientValidationRule.ValidationType">
            <summary>
            Gets client validation rule (name of the jQuery rule)
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider">
            <summary>
            Metadata provider used to localize models and their meta data.
            </summary>
            <remarks>
            <para>Check the namespace documentation for an example on how to use the provider.</para>
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider.#ctor(Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider"/> class.
            </summary>
            <param name="stringProvider">The string provider.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider"/> class.
            </summary>
            <remarks>you need to register <see cref="T:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider"/> in your IoC container.</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
            <summary>
            Gets the metadata for the specified property.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="containerType">The type of the container.</param>
            <param name="modelAccessor">The model accessor.</param>
            <param name="modelType">The type of the model.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>
            The metadata for the property.
            </returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider.Translate(System.Type,System.String)">
            <summary>
            Translate a string
            </summary>
            <param name="type">mode type</param>
            <param name="propertyName">Property name to translate</param>
            <returns>Translated string</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelMetadataProvider.Translate(System.Type,System.String,System.String)">
            <summary>
            Translate a string
            </summary>
            <param name="type">Model type</param>
            <param name="propertyName">Property name</param>
            <param name="metadataName">Meta data name</param>
            <returns>Translated string</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider">
            <summary>
            Used to localize DataAnnotation attribute error messages and view models
            </summary>
            <remarks>
            <para>Hacks the attributes by assigning custom (localized) messages to them to get localized error messages.</para>
            <para>
            Check for namespace documentation for an example on how to use the provider.
            </para>
            <para>Are you missing validation rules for an attribute? Do not try to use the original validation rules. The standard attributes
            uses some nasty delegates to handle the error message. Screwing with them should be handled with care. 
            </para>
            <para>Create a new <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.IValidationMessageDataSource"/> and register it in <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders"/> to customized the translated strings.</para>
            <para>You have to let the results returned from <c>Validate()</c> implement <see cref="T:Griffin.MvcContrib.Localization.IClientValidationRule"/> if you want to enable client validation when using <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject"/>.</para>
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Gets a list of validators.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="context">The context.</param>
            <param name="attributes">The list of validation attributes.</param>
            <returns>
            A list of validators.
            </returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider.GetMissingTranslationMessage(System.Web.Mvc.ModelMetadata,System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            Get default message if the localized string is missing
            </summary>
            <param name="metadata">Model meta data</param>
            <param name="attr">Attribute to translate</param>
            <returns>Formatted message</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider.FormatErrorMessage(System.Web.Mvc.ModelMetadata,System.ComponentModel.DataAnnotations.ValidationAttribute,System.String)">
            <summary>
            
            </summary>
            <param name="metadata">Model meta data</param>
            <param name="attr">Attribute to localize</param>
            <param name="errorMessage">Localized message with <c>{}</c> formatters.</param>
            <returns>Formatted message (<c>{}</c> has been replaced with values)</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider.GetClientRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute,System.String)">
            <summary>
            Get client rules
            </summary>
            <param name="metadata">Model meta data</param>
            <param name="context">Controller context</param>
            <param name="attr">Attribute being localized</param>
            <param name="formattedError">Localized error message</param>
            <returns>Collection (may be empty) with error messages for client side</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ResourceStringProvider">
            <summary>
            Used to return strings from one or more StringTables.
            </summary>
            <example>
            <code>
            var provider = new ResourceStringProvider(MyLocalizedStrings.ResourceProvider);
            </code>
            </example>
            <remarks>
            <para>Model translations should have the following format: "ClassName_PropertyName", for example: "User_FirstName". All
            extra metadata should have the following format: "ClassName_PropertyName_MetadataName".</para>
            <para>
            Validation error messages should just be named as the attributes, but without the "Attribute" suffix. Example: "Required".
            </para>
            </remarks>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider">
            <summary>
            Used to be able to provide localized strings from any source.
            </summary>
            <seealso cref="T:Griffin.MvcContrib.Localization.Types.CommonPrompts"/>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider.GetModelString(System.Type,System.String)">
            <summary>
            Get a localized string for a model property
            </summary>
            <param name="model">Model being localized</param>
            <param name="propertyName">Property to get string for</param>
            <returns>Translated string if found; otherwise null.</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider.GetModelString(System.Type,System.String,System.String)">
            <summary>
            Get a localized metadata for a model property
            </summary>
            <param name="model">Model being localized</param>
            <param name="propertyName">Property to get string for</param>
            <param name="metadataName">Valid names are: Watermark, Description, NullDisplayText, ShortDisplayText.</param>
            <returns>Translated string if found; otherwise null.</returns>
            <remarks>
            Look at <see cref="T:System.Web.Mvc.ModelMetadata"/> to know more about the meta data
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider.GetValidationString(System.Type)">
            <summary>
            Get a translated string for a validation attribute
            </summary>
            <param name="attributeType">Type of attribute</param>
            <returns>Translated validation message if found; otherwise null.</returns>
            <remarks>
            Used to get localized error messages for the DataAnnotation attributes. The returned string 
            should have the same format as the built in messages, such as "{0} is required.".
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider.GetValidationString(System.Type,System.Type,System.String)">
            <summary>
            Get a translated string for a validation attribute
            </summary>
            <param name="attributeType">Type of attribute</param>
            <param name="modelType">Your view model</param>
            <param name="propertyName">Property in your view model</param>
            <returns>Translated validation message if found; otherwise null.</returns>
            <remarks>
            Tries to get a validation string which is specific for a view model property.
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider.GetEnumString(System.Type,System.String)">
            <summary>
            Gets a enum string
            </summary>
            <param name="enumType">Type of enum</param>
            <param name="name">Name of the value to translation for</param>
            <returns>Translated name if found; otherwise null.</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.#ctor(System.Resources.ResourceManager[])">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.ResourceStringProvider"/> class.
            </summary>
            <param name="resourceManager">The resource manager.</param>
            <example>
            </example>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetModelString(System.Type,System.String)">
            <summary>
            Get a localized string for a model property
            </summary>
            <param name="model">Model being localized</param>
            <param name="propertyName">Property to get string for</param>
            <returns>Translated string</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetModelString(System.Type,System.String,System.String)">
            <summary>
            Get a localized metadata for a model property
            </summary>
            <param name="model">Model being localized</param>
            <param name="propertyName">Property to get string for</param>
            <param name="metadataName">Valid names are: Watermark, Description, NullDisplayText, ShortDisplayText.</param>
            <returns>Translated string</returns>
            <remarks>
            Look at <see cref="T:System.Web.Mvc.ModelMetadata"/> to know more about the meta data
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetValidationString(System.Type)">
            <summary>
            Get a translated string for a validation attribute
            </summary>
            <param name="attributeType">Type of attribute</param>
            <returns>Localized validation message</returns>
            <remarks>
            Used to get localized error messages for the DataAnnotation attributes. The returned string 
            should have the same format as the built in messages, such as "{0} is required.".
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetValidationString(System.Type,System.Type,System.String)">
            <summary>
            Get a translated string for a validation attribute
            </summary>
            <param name="attributeType">Type of attribute</param>
            <param name="modelType">Your view model</param>
            <param name="propertyName">Property in your view model</param>
            <returns>Translated validation message if found; otherwise null.</returns>
            <remarks>
            Tries to get a validation string which is specific for a view model property.
            </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetEnumString(System.Type,System.String)">
            <summary>
            Gets a enum string
            </summary>
            <param name="enumType">Type of enum</param>
            <param name="name">Name of the value to translation for</param>
            <returns>Translated name</returns>
            <remarks>enums has the same format as models: EnumTypeName_ValueName</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.Format(System.Type,System.String,System.String[])">
            <summary>
            Format the model informaiton into a StringTable key.
            </summary>
            <param name="type">Model type</param>
            <param name="propertyName">Name of the property in the model</param>
            <param name="extras">Extras used during formatting</param>
            <returns>String Table key</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.Format(System.Type)">
            <summary>
            Format the attribute type information into a StringTable key
            </summary>
            <param name="attributeType">Attribute type</param>
            <returns>String Table key</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ResourceStringProvider.GetString(System.String)">
            <summary>
            Get a string from one of the string tables.
            </summary>
            <param name="name">String table item key</param>
            <returns>string if found; otherwise null.</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.CommonPrompts">
            <summary>
            Any prompt found for this type will be used if the requested type do not contain the requested prompt
            </summary>
            <remarks>Common prompts can be used to avoid duplicating a lot of phrases</remarks>
            <seealso cref="T:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider"/>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.DelegateValidationAttributeAdapterFactory">
            <summary>
            Uses a delegate to create the client validation rules.
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.IValidationAttributeAdapterFactory">
            <summary>
            Create validation rules for an attribute.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.IValidationAttributeAdapterFactory.Create(System.ComponentModel.DataAnnotations.ValidationAttribute,System.String)">
            <summary>
            Generate client rules for a validation attribute
            </summary>
            <param name="attribute">Attribute to get rules for</param>
            <param name="errorMessage">Message to display</param>
            <returns>Validation rules</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.DelegateValidationAttributeAdapterFactory.#ctor(System.Func{System.ComponentModel.DataAnnotations.ValidationAttribute,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule}})">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.Types.DelegateValidationAttributeAdapterFactory"/> class.
            </summary>
            <param name="factory">Takes attribute + error Message and returns client rules.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.DelegateValidationAttributeAdapterFactory.Create(System.ComponentModel.DataAnnotations.ValidationAttribute,System.String)">
            <summary>
            Generate client rules for a validation attribute
            </summary>
            <param name="attribute">Attribute to get rules for</param>
            <param name="errorMessage">Message to display</param>
            <returns>Validation rules</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.TypePrompt">
            <summary>
            Used to store translated prompts.
            </summary>
            <remarks>Will </remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePrompt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.Types.TypePrompt"/> class.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePrompt.#ctor(System.Int32,Griffin.MvcContrib.Localization.Types.TypePrompt)">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.Types.TypePrompt"/> class.
            </summary>
            <param name="localeId">New locale </param>
            <param name="source">Copies all but translated text.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePrompt.Equals(Griffin.MvcContrib.Localization.Types.TypePrompt)">
            <summary>
            Indicates whether the current object is equal to another object of the same type. (language not taken into account)
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePrompt.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.TypeName">
            <summary>
            Gets or sets type (class) name 
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.TypeFullName">
            <summary>
            Gets or sets namespace + class
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.SubjectTypeName">
            <summary>
            Gets or sets assembly qualified name
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.TextName">
            <summary>
            Gets or sets text name
            </summary>
            <remarks>Might be a property name, an enum value name or just empty (actual type is being translated)</remarks>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.TranslatedText">
            <summary>
            Gets actual translation
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.UpdatedAt">
            <summary>
            Gets when the prompt was updated.
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.LocaleId">
            <summary>
            Ges or sets LCID identifier.
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.Key">
            <summary>
            Gets or sets ID is unique for the current entry (in the current language)
            </summary>
            <remarks>The id should be the same in all languages</remarks>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.Types.TypePrompt.UpdatedBy">
            <summary>
            Gets or sets user id (using current identity <see cref="P:System.Web.HttpContext.User"/>).
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.TypePromptKey">
            <summary>
            Type prompt key.
            </summary>
            <remarks>The key is only unique for the current language only. This is a requirement
            to be able to translate prompts between languages</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:ViewPromptKey"/> class.
            </summary>
            <param name="fullTypeName">Type.FullName for the type getting localized.</param>
            <param name="name">Property name (and metadata name prefixed with underscore).</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:ViewPromptKey"/> class.
            </summary>
            <param name="md5Hash">Already computed hash.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.Equals(Griffin.MvcContrib.Localization.Types.TypePromptKey)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.op_Equality(Griffin.MvcContrib.Localization.Types.TypePromptKey,Griffin.MvcContrib.Localization.Types.TypePromptKey)">
            <summary>
            
            </summary>
            <param name="typePromptKey"></param>
            <param name="typePromptKey2"></param>
            <returns></returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.op_Inequality(Griffin.MvcContrib.Localization.Types.TypePromptKey,Griffin.MvcContrib.Localization.Types.TypePromptKey)">
            <summary>
            
            </summary>
            <param name="viewPromptKey"></param>
            <param name="viewPromptKey2"></param>
            <returns></returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.TypePromptKey.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory">
            <summary>
            creates adapters for client side validation
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory"/> class.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory.Map``1(Griffin.MvcContrib.Localization.Types.IValidationAttributeAdapterFactory)">
            <summary>
            Maps the specified factory.
            </summary>
            <typeparam name="T">Validation attribute to return rules for</typeparam>
            <param name="factory">The factory.</param>
            <remarks>Replaces any existing factories.</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory.Create(System.ComponentModel.DataAnnotations.ValidationAttribute,System.String)">
            <summary>
            Create client validation rules for Data Annotation attributes.
            </summary>
            <param name="attribute">Attribute</param>
            <param name="errorMessage">Not formatted error message (should contain {0} etc}</param>
            <returns>A collection of rules (or an empty collection)</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.Types.ValidationAttributeAdapterFactory.MapDefaultRules">
            <summary>
            Map rules for the default attributes.
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidatableObjectAdapter">
            <summary>
            Adapter which convers the result from <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject"/> to <see cref="T:System.Web.Mvc.ModelValidationResult"/>
            </summary>
            <remarks>Client side validation will only work if the rules from <see cref="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)"/> implements <see cref="T:Griffin.MvcContrib.Localization.IClientValidationRule"/></remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.ValidatableObjectAdapter"/> class.
            </summary>
            <param name="metadata">The metadata.</param>
            <param name="controllerContext">The controller context.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidatableObjectAdapter.GetClientValidationRules">
            <summary>
            When implemented in a derived class, returns metadata for client validation.
            </summary>
            <returns>
            The metadata for client validation.
            </returns>
            <remarks>Will only work if the rules from <see cref="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)"/> implements <see cref="T:Griffin.MvcContrib.Localization.IClientValidationRule"/></remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidatableObjectAdapter.Validate(System.Object)">
            <summary>
            When implemented in a derived class, validates the object.
            </summary>
            <param name="container">The container.</param>
            <returns>
            A list of validation results.
            </returns>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidatableObjectAdapter.IsRequired">
            <summary>
            Gets or sets a value that indicates whether a model property is required.
            </summary>
            <returns>true if the model property is required; otherwise, false.</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.DataAnnotationDefaultStrings">
            <summary>
            Loads the default DataAnnotation strings from the resource file System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources
            </summary>
            <remarks>Do note that resource files can fallback to default culture (and therefore return the incorrect language)</remarks>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.IValidationMessageDataSource">
            <summary>
            Provides validation messages for attributes from a specific data source.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.IValidationMessageDataSource.GetMessage(Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext)">
            <summary>
            Get a validation message
            </summary>
            <param name="context"></param>
            <returns>String if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.DataAnnotationDefaultStrings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ValidationAttributesStringProvider"/> class.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.DataAnnotationDefaultStrings.GetPrompts(System.Globalization.CultureInfo)">
            <summary>
              Get all strings.
            </summary>
            <param name="culture">Culture to get prompts for</param>
            <returns>A colleciton of prompts (or an empty collection)</returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.DataAnnotationDefaultStrings.GetString(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Get the localized text
            </summary>
            <param name="type">Validation attribute type.</param>
            <param name="culture">Culture to get for </param>
            <returns>Text if found; otherwise null</returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext">
            <summary>
            Context information used to be able to identify and load the correct translation
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext">
            <summary>
            Context used when fetching the string from one of the <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.IValidationMessageDataSource"/>.
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext.Attribute">
            <summary>
            Gets attribute to get a message for
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext.ContainerType">
            <summary>
            Gets type for the model that the property exists in
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext.PropertyName">
            <summary>
            Gets property that the attribute is for
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext.CultureInfo">
            <summary>
            Gets culture that we want a message for
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext.#ctor(System.ComponentModel.DataAnnotations.ValidationAttribute,System.Type,System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext"/> class.
            </summary>
            <param name="attribute">The attribute.</param>
            <param name="containerType">Model that the property is in.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="cultureInfo">Requested language.</param>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext.Attribute">
            <summary>
            Gets attribute to get message for.
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext.ContainerType">
            <summary>
            Gets model that the property exists in
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext.PropertyName">
            <summary>
            Gets name of the target property
            </summary>
        </member>
        <member name="P:Griffin.MvcContrib.Localization.ValidationMessages.GetMessageContext.CultureInfo">
            <summary>
            Gets requested language
            </summary>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider">
            <summary>
            Uses <see cref="T:Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider"/> to find attribute translations.
            </summary>
            <remarks>Uses the <see cref="T:System.Web.Mvc.DependencyResolver"/> to find the localized string provider.</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider"/> class.
            </summary>
            <remarks>Use this constructor if you are using IoC (it will fetch the provider using <c>DependencyResolver</c>)</remarks>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider.#ctor(Griffin.MvcContrib.Localization.Types.ILocalizedStringProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider"/> class.
            </summary>
            <param name="stringProvider">The string provider.</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider.GetStringProvider">
            <summary>
            Gets the string provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider.GetMessage(Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext)">
            <summary>
            Get a validation message
            </summary>
            <param name="context"></param>
            <returns>
            String if found; otherwise <c>null</c>.
            </returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.MvcDataSource">
            <summary>
            Provides messages for all attributes in ASP.NET MVC
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.MvcDataSource.GetMessage(Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext)">
            <summary>
            Get a validation message
            </summary>
            <param name="context">Context</param>
            <returns>
            String if found; otherwise <c>null</c>.
            </returns>
        </member>
        <member name="T:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders">
            <summary>
            Used to supply custom validation messages for attributes.
            </summary>
            <remarks>
            <para>This class is called by <see cref="T:Griffin.MvcContrib.Localization.LocalizedModelValidatorProvider"/>
            for each attribute that a property have. It's responsibility is to use all of the language providers to get the correct translation.
            The returned message should have formatters in them.</para>
            <para>
            Default setup is using <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.GriffinStringsProvider"/> as default and <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.MvcDataSource"/> + <see cref="T:Griffin.MvcContrib.Localization.ValidationMessages.DataAnnotationDefaultStrings"/> as fallback.
            </para>
            </remarks>
            <example>When not using a container:<code>
            ValidationMessageProviders.Clear();
            ValidationMessageProviders.Add(new GriffinStringsProvider(yourLocalizedStringProvider));
            
            // for attributes in System.Web.Mvc
            ValidationMessageProviders.Add(new MvcDataSource());
            
            // For attributes in System.ComponentModel.DataAnnotations
            ValidationMessageProviders.Add(new DataAnnotationDefaultStrings());
            </code></example>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders.Reset">
            <summary>
            reset to the default providers.
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders.Add(Griffin.MvcContrib.Localization.ValidationMessages.IValidationMessageDataSource)">
            <summary>
            Add another provider (last)
            </summary>
            <param name="provider">Provider to add</param>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders.Clear">
            <summary>
            Remove all providers
            </summary>
        </member>
        <member name="M:Griffin.MvcContrib.Localization.ValidationMessages.ValidationMessageProviders.GetMessage(Griffin.MvcContrib.Localization.ValidationMessages.IGetMessageContext)">
            <summary>
            Get a message
            </summary>
            <param name="context">Context information</param>
            <returns>String if found; otherwise <c>null</c>.</returns>
        </member>
    </members>
</doc>
